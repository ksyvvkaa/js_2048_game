{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar cells = Array.from(document.querySelectorAll(\".field-cell\"));\nvar field = [\n    cells.slice(0, 4),\n    cells.slice(4, 8),\n    cells.slice(8, 12),\n    cells.slice(12, 16)\n];\nvar messages = {\n    win: document.querySelector(\".message-win\"),\n    lose: document.querySelector(\".message-lose\"),\n    start: document.querySelector(\".message-start\")\n};\nvar score = document.querySelector(\".game-score\");\nvar mainButton = document.querySelector(\".button\");\nvar isFirstMove;\nmainButton.addEventListener(\"click\", function() {\n    cells.forEach(function(cell) {\n        changeCell(cell, \"\");\n    });\n    changeMessage();\n    mainButton.classList.replace(\"restart\", \"start\");\n    mainButton.innerHTML = \"Start\";\n    score.innerHTML = 0;\n    isFirstMove = true;\n    document.removeEventListener(\"keydown\", makeMove);\n    fillRandomCell();\n    fillRandomCell();\n    document.addEventListener(\"keydown\", makeMove);\n});\nfunction fillRandomCell() {\n    var emptyCells = cells.filter(function(cell) {\n        return !cell.innerHTML;\n    });\n    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n    var value = Math.random() < 0.1 ? 4 : 2;\n    changeCell(emptyCells[randomIndex], value);\n}\nfunction changeCell(cell, value) {\n    if (!value) {\n        cell.classList.remove(\"field-cell--\".concat(cell.innerHTML));\n        cell.innerHTML = \"\";\n        return;\n    }\n    if (cell.innerHTML) {\n        cell.classList.replace(\"field-cell--\".concat(cell.innerHTML), \"field-cell--\".concat(value));\n        cell.innerHTML = value;\n        return;\n    }\n    cell.innerHTML = value;\n    cell.classList.add(\"field-cell--\".concat(value));\n}\nfunction changeMessage(newMessage) {\n    var currentMessage = Object.values(messages).find(function(message) {\n        return !message.classList.contains(\"hidden\");\n    });\n    if (currentMessage) currentMessage.classList.add(\"hidden\");\n    if (newMessage) newMessage.classList.remove(\"hidden\");\n}\nfunction checkWin(value) {\n    if (value === 2048) changeMessage(messages.win);\n}\nfunction increaseScore(value) {\n    score.innerHTML = +score.innerHTML + value;\n}\nfunction makeMove(action) {\n    var GAME_BUTTONS = [\n        \"ArrowUp\",\n        \"ArrowDown\",\n        \"ArrowRight\",\n        \"ArrowLeft\"\n    ];\n    if (!GAME_BUTTONS.includes(action.key)) return;\n    var isAnythingChanged = false;\n    checkFirstMove();\n    switch(action.key){\n        case \"ArrowUp\":\n            for(var i = 0; i < 4; i++){\n                for(var j = 0; j < 4; j++)for(var k = i + 1; k < 4; k++){\n                    var value = field[k][j].innerHTML;\n                    if (!value) continue;\n                    if (!field[i][j].innerHTML) {\n                        moveValue(field[k][j], field[i][j]);\n                        isAnythingChanged = true;\n                        continue;\n                    }\n                    if (value === field[i][j].innerHTML) {\n                        var newValue = value * 2;\n                        mergeCells(field[k][j], field[i][j]);\n                        increaseScore(newValue);\n                        checkWin(newValue);\n                        isAnythingChanged = true;\n                        break;\n                    }\n                    break;\n                }\n            }\n            break;\n        case \"ArrowDown\":\n            for(var i1 = 3; i1 >= 0; i1--){\n                for(var j1 = 0; j1 < 4; j1++)for(var k1 = i1 - 1; k1 >= 0; k1--){\n                    var value1 = field[k1][j1].innerHTML;\n                    if (!value1) continue;\n                    if (!field[i1][j1].innerHTML) {\n                        moveValue(field[k1][j1], field[i1][j1]);\n                        isAnythingChanged = true;\n                        continue;\n                    }\n                    if (value1 === field[i1][j1].innerHTML) {\n                        var newValue1 = value1 * 2;\n                        mergeCells(field[k1][j1], field[i1][j1]);\n                        increaseScore(newValue1);\n                        checkWin(newValue1);\n                        isAnythingChanged = true;\n                        break;\n                    }\n                    break;\n                }\n            }\n            break;\n        case \"ArrowRight\":\n            for(var i2 = 0; i2 < 4; i2++){\n                for(var j2 = 3; j2 >= 0; j2--)for(var k2 = j2 - 1; k2 >= 0; k2--){\n                    var value2 = field[i2][k2].innerHTML;\n                    if (!value2) continue;\n                    if (!field[i2][j2].innerHTML) {\n                        moveValue(field[i2][k2], field[i2][j2]);\n                        isAnythingChanged = true;\n                        continue;\n                    }\n                    if (value2 === field[i2][j2].innerHTML) {\n                        var newValue2 = value2 * 2;\n                        mergeCells(field[i2][k2], field[i2][j2]);\n                        increaseScore(newValue2);\n                        checkWin(newValue2);\n                        isAnythingChanged = true;\n                        break;\n                    }\n                    break;\n                }\n            }\n            break;\n        case \"ArrowLeft\":\n            for(var i3 = 0; i3 < 4; i3++){\n                for(var j3 = 0; j3 < 4; j3++)for(var k3 = j3 + 1; k3 < 4; k3++){\n                    var value3 = field[i3][k3].innerHTML;\n                    if (!value3) continue;\n                    if (!field[i3][j3].innerHTML) {\n                        moveValue(field[i3][k3], field[i3][j3]);\n                        isAnythingChanged = true;\n                        continue;\n                    }\n                    if (value3 === field[i3][j3].innerHTML) {\n                        var newValue3 = value3 * 2;\n                        mergeCells(field[i3][k3], field[i3][j3]);\n                        increaseScore(newValue3);\n                        checkWin(newValue3);\n                        isAnythingChanged = true;\n                        break;\n                    }\n                    break;\n                }\n            }\n            break;\n    }\n    if (isAnythingChanged) fillRandomCell();\n    else if (isLose()) {\n        changeMessage(messages.lose);\n        document.removeEventListener(\"keydown\", makeMove);\n    }\n}\nfunction moveValue(fromCell, toCell) {\n    changeCell(toCell, fromCell.innerHTML);\n    changeCell(fromCell, \"\");\n}\nfunction mergeCells(fromCell, toCell) {\n    changeCell(toCell, fromCell.innerHTML * 2);\n    changeCell(fromCell, \"\");\n}\nfunction isLose() {\n    if (cells.some(function(cell) {\n        return !cell.innerHTML;\n    })) return false;\n    for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n        var currentVal = field[i][j].innerHTML;\n        var valuesToCheck = [];\n        if (field[i + 1]) valuesToCheck.push(field[i + 1][j].innerHTML);\n        if (field[i][j + 1]) valuesToCheck.push(field[i][j + 1].innerHTML);\n        if (valuesToCheck.includes(currentVal)) return false;\n    }\n    return true;\n}\nfunction checkFirstMove() {\n    if (isFirstMove) {\n        mainButton.classList.replace(\"start\", \"restart\");\n        mainButton.innerHTML = \"Restart\";\n        isFirstMove = false;\n    }\n}\n\n//# sourceMappingURL=index.9f7d405f.js.map\n","'use strict';\n\nconst cells = Array.from(document.querySelectorAll('.field-cell'));\n\nconst field = [\n  cells.slice(0, 4),\n  cells.slice(4, 8),\n  cells.slice(8, 12),\n  cells.slice(12, 16),\n];\n\nconst messages = {\n  win: document.querySelector('.message-win'),\n  lose: document.querySelector('.message-lose'),\n  start: document.querySelector('.message-start'),\n};\n\nconst score = document.querySelector('.game-score');\n\nconst mainButton = document.querySelector('.button');\n\nlet isFirstMove;\n\nmainButton.addEventListener('click', () => {\n  cells.forEach(cell => {\n    changeCell(cell, '');\n  });\n\n  changeMessage();\n  mainButton.classList.replace('restart', 'start');\n  mainButton.innerHTML = 'Start';\n\n  score.innerHTML = 0;\n  isFirstMove = true;\n\n  document.removeEventListener('keydown', makeMove);\n  fillRandomCell();\n  fillRandomCell();\n  document.addEventListener('keydown', makeMove);\n});\n\nfunction fillRandomCell() {\n  const emptyCells = cells.filter(cell => !cell.innerHTML);\n  const randomIndex = Math.floor(Math.random() * emptyCells.length);\n  const value = Math.random() < 0.1 ? 4 : 2;\n\n  changeCell(emptyCells[randomIndex], value);\n}\n\nfunction changeCell(cell, value) {\n  if (!value) {\n    cell.classList.remove(`field-cell--${cell.innerHTML}`);\n    cell.innerHTML = '';\n\n    return;\n  }\n\n  if (cell.innerHTML) {\n    cell.classList.replace(\n      `field-cell--${cell.innerHTML}`,\n      `field-cell--${value}`,\n    );\n\n    cell.innerHTML = value;\n\n    return;\n  }\n\n  cell.innerHTML = value;\n  cell.classList.add(`field-cell--${value}`);\n}\n\nfunction changeMessage(newMessage) {\n  const currentMessage = Object.values(messages).find(\n    message => !message.classList.contains('hidden'),\n  );\n\n  if (currentMessage) {\n    currentMessage.classList.add('hidden');\n  }\n\n  if (newMessage) {\n    newMessage.classList.remove('hidden');\n  }\n}\n\nfunction checkWin(value) {\n  if (value === 2048) {\n    changeMessage(messages.win);\n  }\n}\n\nfunction increaseScore(value) {\n  score.innerHTML = +score.innerHTML + value;\n}\n\nfunction makeMove(action) {\n  const GAME_BUTTONS = ['ArrowUp', 'ArrowDown', 'ArrowRight', 'ArrowLeft'];\n\n  if (!GAME_BUTTONS.includes(action.key)) {\n    return;\n  }\n\n  let isAnythingChanged = false;\n\n  checkFirstMove();\n\n  switch (action.key) {\n    case 'ArrowUp':\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          for (let k = i + 1; k < 4; k++) {\n            const value = field[k][j].innerHTML;\n\n            if (!value) {\n              continue;\n            }\n\n            if (!field[i][j].innerHTML) {\n              moveValue(field[k][j], field[i][j]);\n              isAnythingChanged = true;\n\n              continue;\n            }\n\n            if (value === field[i][j].innerHTML) {\n              const newValue = value * 2;\n\n              mergeCells(field[k][j], field[i][j]);\n              increaseScore(newValue);\n              checkWin(newValue);\n              isAnythingChanged = true;\n\n              break;\n            }\n\n            break;\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowDown':\n      for (let i = 3; i >= 0; i--) {\n        for (let j = 0; j < 4; j++) {\n          for (let k = i - 1; k >= 0; k--) {\n            const value = field[k][j].innerHTML;\n\n            if (!value) {\n              continue;\n            }\n\n            if (!field[i][j].innerHTML) {\n              moveValue(field[k][j], field[i][j]);\n              isAnythingChanged = true;\n\n              continue;\n            }\n\n            if (value === field[i][j].innerHTML) {\n              const newValue = value * 2;\n\n              mergeCells(field[k][j], field[i][j]);\n              increaseScore(newValue);\n              checkWin(newValue);\n              isAnythingChanged = true;\n\n              break;\n            }\n\n            break;\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowRight':\n      for (let i = 0; i < 4; i++) {\n        for (let j = 3; j >= 0; j--) {\n          for (let k = j - 1; k >= 0; k--) {\n            const value = field[i][k].innerHTML;\n\n            if (!value) {\n              continue;\n            }\n\n            if (!field[i][j].innerHTML) {\n              moveValue(field[i][k], field[i][j]);\n              isAnythingChanged = true;\n              continue;\n            }\n\n            if (value === field[i][j].innerHTML) {\n              const newValue = value * 2;\n\n              mergeCells(field[i][k], field[i][j]);\n              increaseScore(newValue);\n              checkWin(newValue);\n              isAnythingChanged = true;\n\n              break;\n            }\n\n            break;\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowLeft':\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          for (let k = j + 1; k < 4; k++) {\n            const value = field[i][k].innerHTML;\n\n            if (!value) {\n              continue;\n            }\n\n            if (!field[i][j].innerHTML) {\n              moveValue(field[i][k], field[i][j]);\n              isAnythingChanged = true;\n              continue;\n            }\n\n            if (value === field[i][j].innerHTML) {\n              const newValue = value * 2;\n\n              mergeCells(field[i][k], field[i][j]);\n              increaseScore(newValue);\n              checkWin(newValue);\n              isAnythingChanged = true;\n\n              break;\n            }\n\n            break;\n          }\n        }\n      }\n\n      break;\n  }\n\n  if (isAnythingChanged) {\n    fillRandomCell();\n  } else if (isLose()) {\n    changeMessage(messages.lose);\n    document.removeEventListener('keydown', makeMove);\n  }\n}\n\nfunction moveValue(fromCell, toCell) {\n  changeCell(toCell, fromCell.innerHTML);\n  changeCell(fromCell, '');\n}\n\nfunction mergeCells(fromCell, toCell) {\n  changeCell(toCell, fromCell.innerHTML * 2);\n  changeCell(fromCell, '');\n}\n\nfunction isLose() {\n  if (cells.some(cell => !cell.innerHTML)) {\n    return false;\n  }\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      const currentVal = field[i][j].innerHTML;\n      const valuesToCheck = [];\n\n      if (field[i + 1]) {\n        valuesToCheck.push(field[i + 1][j].innerHTML);\n      }\n\n      if (field[i][j + 1]) {\n        valuesToCheck.push(field[i][j + 1].innerHTML);\n      }\n\n      if (valuesToCheck.includes(currentVal)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction checkFirstMove() {\n  if (isFirstMove) {\n    mainButton.classList.replace('start', 'restart');\n    mainButton.innerHTML = 'Restart';\n    isFirstMove = false;\n  }\n}\n"],"names":["isFirstMove","cells","Array","from","document","querySelectorAll","field","slice","messages","win","querySelector","lose","start","score","mainButton","fillRandomCell","emptyCells","filter","cell","innerHTML","randomIndex","Math","floor","random","length","changeCell","value","classList","remove","concat","replace","add","changeMessage","newMessage","currentMessage","Object","values","find","message","contains","checkWin","increaseScore","makeMove","action","GAME_BUTTONS","includes","key","isAnythingChanged","i","j","k","moveValue","newValue","mergeCells","i1","j1","k1","value1","newValue1","i2","j2","k2","value2","newValue2","i3","j3","k3","value3","newValue3","isLose","some","currentVal","valuesToCheck","push","removeEventListener","fromCell","toCell","addEventListener","forEach"],"version":3,"file":"index.9f7d405f.js.map"}